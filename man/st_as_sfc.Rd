% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sp.R, R/wkb.R, R/wkt.R
\name{st_as_sfc}
\alias{st_as_sfc}
\alias{st_as_sfc.SpatialLines}
\alias{st_as_sfc.SpatialMultiPoints}
\alias{st_as_sfc.SpatialPixels}
\alias{st_as_sfc.SpatialPoints}
\alias{st_as_sfc.SpatialPolygons}
\alias{st_as_sfc.WKB}
\alias{st_as_sfc.character}
\title{Convert foreign geometry object to an sfc object}
\usage{
st_as_sfc(x, ...)

\method{st_as_sfc}{SpatialPoints}(x, ...)

\method{st_as_sfc}{SpatialPixels}(x, ...)

\method{st_as_sfc}{SpatialMultiPoints}(x, ...)

\method{st_as_sfc}{SpatialLines}(x, ..., forceMulti = FALSE)

\method{st_as_sfc}{SpatialPolygons}(x, ..., forceMulti = FALSE)

\method{st_as_sfc}{WKB}(x, ..., EWKB = FALSE, pureR = FALSE,
  crs = NA_crs_)

\method{st_as_sfc}{character}(x, crs = NA_integer_, ...)
}
\arguments{
\item{x}{object to convert}

\item{...}{further arguments}

\item{forceMulti}{logical; if \code{TRUE}, force coercion into \code{MULTIPOLYGON} or \code{MULTILINE} objects, else autodetect}

\item{EWKB}{logical; if TRUE, parse as EWKB (PostGIS: ST_AsEWKB), otherwise as ISO WKB (PostGIS: ST_AsBinary)}

\item{pureR}{logical; if TRUE, use only R code, if FALSE, use compiled (C++) code; use TRUE when the endian-ness of the binary differs from the host machine (\code{.Platform$endian}).}

\item{crs}{integer or character; coordinate reference system for the geometry, see \link{st_crs}}
}
\description{
Convert foreign geometry object to an sfc object
}
\details{
when converting from WKB, the object \code{x} is either a character vector such as typically obtained from PostGIS (either with leading "0x" or without), or a list with raw vectors representing the features in binary (raw) form.

if \code{x} is a character vector, it should be a vector containing the well-known-text representations of a single geometry for each vector element
}
\examples{
wkb = structure(list("01010000204071000000000000801A064100000000AC5C1441"), class = "WKB")
st_as_sfc(wkb, EWKB = TRUE)
wkb = structure(list("0x01010000204071000000000000801A064100000000AC5C1441"), class = "WKB")
st_as_sfc(wkb, EWKB = TRUE)
}

